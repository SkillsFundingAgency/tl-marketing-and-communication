{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentNameAbbreviation": {
            "type": "string"
        },
        "resourceNamePrefix": {
            "type": "string"
        },
        "sharedASPName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedKeyVaultName": {
            "type": "string"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "configStorageAccountName": {
            "type": "string"
        },
        "uiCustomHostName": {
            "type": "string"
        },
        "certificateName": {
            "type": "string"
        },
        "courseDirectoryImportTrigger": {
            "type": "string"
        },
        "ipSecurityRestrictions": {
            "type": "array"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/tl-platform-building-blocks/master/ArmTemplates/",
        "uiAppName": "[concat(parameters('resourceNamePrefix'), '-web')]",
        "appInsightName": "[concat(parameters('resourceNamePrefix'), '-ai')]",
        "workerFunctionAppName": "[concat(parameters('resourceNamePrefix'), '-func-worker')]",
        "storageAccountName": "[replace(concat(parameters('resourceNamePrefix'), 'str'), '-', '')]",
        "logAnalyticsName": "[concat(parameters('resourceNamePrefix'), '-la')]"
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('storage-account','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "storageKind": {
                        "value": "StorageV2"
                    },
                    "allowBlobPublicAccess": {
                        "value": true
                    },
                    "minimumTlsVersion": {
                        "value": "TLS1_2"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('app-insights','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('appInsightName')]"
                    },
                    "attachedService": {
                        "value": "[variables('uiAppName')]"
                    },
                    "logAnalyticsWorkspaceId": {
                        "value": "[reference(concat('log-analytics-workspace','-',parameters('environmentNameAbbreviation'))).outputs.fullyQualifiedResourceId.value]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('log-analytics-workspace','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'log-analytics-workspace.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "logAnalyticsWorkspaceName": {
                        "value": "[variables('logAnalyticsName')]"
                    },
                    "logAnalyticsWorkspaceSku": {
                        "value": "PerGB2018"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('ui-app-service-certificate','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('certificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "serverFarmId": {
                        "value": "[resourceId(parameters('sharedEnvResourceGroup'),'Microsoft.Web/serverFarms',parameters('sharedASPName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('ui-app-service','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('uiAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('sharedASPName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "EnvironmentName",
                                "value": "[toUpper(parameters('environmentNameAbbreviation'))]"
                            },
                            {
                                "name": "ConfigurationStorageConnectionString",
                                "value": "[parameters('configurationStorageConnectionString')]"
                            },
                            {
                                "name": "Version",
                                "value": "1.0"
                            },
                            {
                                "name": "ServiceName",
                                "value": "Sfa.Tl.Marketing.Communication"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(concat('app-insights','-',parameters('environmentNameAbbreviation'))).outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "WEBSITE_SWAP_WARMUP_PING_STATUSES",
                                "value": "200"
                            },
                            {
                                "name": "WEBSITE_ADD_SITENAME_BINDINGS_IN_APPHOST_CONFIG",
                                "value": "1"
                            }
                        ]
                    },
                    "customHostName": {
                        "value": "[parameters('uiCustomHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[reference(concat('ui-app-service-certificate','-',parameters('environmentNameAbbreviation'))).outputs.certificateThumbprint.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('ipSecurityRestrictions')]"
                    },
                    "ipSecurityRestrictionsDefaultAction": {
                        "value": "Deny"
                    }
                }
            },
            "dependsOn": [
                "[concat('ui-app-service-certificate','-', parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('function-app','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'function-app.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('workerFunctionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('sharedASPName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "systemAssignedIdentity": {
                        "value": "SystemAssigned"
                    },
                    "functionAppAppSettings": {
                        "value": [
                            {
                                "name": "EnvironmentName",
                                "value": "[toUpper(parameters('environmentNameAbbreviation'))]"
                            },
                            {
                                "name": "ConfigurationStorageConnectionString",
                                "value": "[parameters('configurationStorageConnectionString')]"
                            },
                            {
                                "name": "Version",
                                "value": "1.0"
                            },
                            {
                                "name": "ServiceName",
                                "value": "Sfa.Tl.Marketing.Communication"
                            },
                            {
                                "name": "CourseDirectoryImportTrigger",
                                "value": "[parameters('courseDirectoryImportTrigger')]"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(concat('app-insights','-',parameters('environmentNameAbbreviation'))).outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "AzureWebJobsStorage",
                                "value": "[reference(concat('storage-account','-',parameters('environmentNameAbbreviation'))).outputs.storageConnectionStringKey2.value]"
                            },
                            {
                                "name": "AzureWebJobsDashboard",
                                "value": "[reference(concat('storage-account','-',parameters('environmentNameAbbreviation'))).outputs.storageConnectionStringKey2.value]"
                            },
                            {
                                "name": "WEBSITE_TIME_ZONE",
                                "value": "GMT Standard Time"
                            },
                            {
                                "name": "FUNCTIONS_EXTENSION_VERSION",
                                "value": "~4"
                            },
                            {
                                "name": "WEBSITE_SWAP_WARMUP_PING_PATH",
                                "value": "api/GetProviders"
                            },
                            {
                                "name": "WEBSITE_SWAP_WARMUP_PING_STATUSES",
                                "value": "401"
                            },
                            {
                                "name": "FUNCTIONS_WORKER_RUNTIME",
                                "value": "dotnet-isolated"
                            },
                            {
                                "name": "WEBSITE_ADD_SITENAME_BINDINGS_IN_APPHOST_CONFIG",
                                "value": "1"
                            }
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('ui-app-service-role-assignment-storage-account','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'/role-assignments/role-assignment-storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('ui-app-service','-',parameters('environmentNameAbbreviation'))).outputs.managedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "StorageBlobDataContributor"
                    },
                    "resourceName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('ui-app-service','-',parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('function-app-role-assignment-storage-account','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'/role-assignments/role-assignment-storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('function-app','-',parameters('environmentNameAbbreviation'))).outputs.managedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "StorageBlobDataContributor"
                    },
                    "resourceName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('function-app','-',parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('ui-app-service-role-assignment-storage-account-table','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'/role-assignments/role-assignment-storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('ui-app-service','-',parameters('environmentNameAbbreviation'))).outputs.managedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "StorageTableDataContributor"
                    },
                    "resourceName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('ui-app-service','-',parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('function-app-role-assignment-storage-account-table','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'/role-assignments/role-assignment-storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('function-app','-',parameters('environmentNameAbbreviation'))).outputs.managedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "StorageTableDataContributor"
                    },
                    "resourceName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('function-app','-',parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('ui-app-service-role-assignment-config-storage-account','-', parameters('environmentNameAbbreviation'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'/role-assignments/role-assignment-storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('ui-app-service','-',parameters('environmentNameAbbreviation'))).outputs.managedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "StorageTableDataReader"
                    },
                    "resourceName": {
                        "value": "[parameters('configStorageAccountName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('ui-app-service','-',parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "apiVersion": "2022-09-01",
            "name": "[concat('function-app-role-assignment-config-storage-account','-', parameters('environmentNameAbbreviation'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'/role-assignments/role-assignment-storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "principalId": {
                        "value": "[reference(concat('function-app','-',parameters('environmentNameAbbreviation'))).outputs.managedServiceIdentityId.value]"
                    },
                    "assignmentType": {
                        "value": "StorageTableDataReader"
                    },
                    "resourceName": {
                        "value": "[parameters('configStorageAccountName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('function-app','-',parameters('environmentNameAbbreviation'))]"
            ]
        }
    ],
    "outputs": {
        "uiAppName": {
            "type": "string",
            "value": "[variables('uiAppName')]"
        },
        "workerFunctionAppName": {
            "type": "string",
            "value": "[variables('workerFunctionAppName')]"
        },
        "StorageConnectionString": {
            "type": "string",
            "value": "[reference(concat('storage-account','-', parameters('environmentNameAbbreviation'))).outputs.storageConnectionStringKey2.value]"
        }
    }
}
