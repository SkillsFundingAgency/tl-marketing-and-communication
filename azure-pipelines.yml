name: TL-Marketing-and-Communications
trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

workspace:
    clean: all

variables:
  buildConfiguration: 'release'
  buildPlatform: 'anycpu'

pool:
  name: 'Continuous Integration 02 - SSD - 160ACU'
  demands: 
  - msbuild
  - visualstudio

steps:
- task: gttools.gitversion.gitversion-task.GitVersion@5
  displayName: GitVersion
  inputs:
    updateAssemblyInfo: true

- task: Npm@1
  displayName: 'npm install'
  inputs: 
    workingDir: sfa.Tl.Marketing.Communication
    verbose: false

- task: Gulp@0
  displayName: 'gulp '
  inputs:
      gulpFile: sfa.Tl.Marketing.Communication/gulpfile.js

- task: DotNetCoreCLI@2
  displayName: 'DotNet Restore'
  inputs:
    command: restore
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'DotNet Build'
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)  --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'DotNet Test'
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(buildConfiguration)  --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'DotNet Publish'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(buildConfiguration)  --output $(build.artifactstagongdirectory)'
    zipAfterPublish: True

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |
     azure\**
    TargetFolder: '$(build.artifactstagingdirectory)'
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'