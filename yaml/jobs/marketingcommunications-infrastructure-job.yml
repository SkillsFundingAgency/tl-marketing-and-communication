parameters:
  - name: BaseName
    type: string
  - name: serviceConnection
    type: string
  - name: sharedEnvironmentId
    type: string
  - name: environmentName
    type: string
jobs:
  - job: DeployMarketingCommunicationsInfrastructure
    pool:
      name: 'Azure Pipelines'
      vmImage: 'windows-latest'
    variables:
      SharedASPName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.sharedASPName'] ]
      SharedKeyVaultName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.sharedKeyVaultName'] ]
      SharedSQLServerName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.sharedSQLServerName'] ]
      ConfigurationStorageConnectionString: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.configStorageConnectionString'] ]
      SharedResourceGroup: $[stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.SharedVariables.SharedResourceGroup']]
      ConfigStorageAccountName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.ConfigStorageAccountName'] ]
      
    steps:
      - checkout: self
      - template: ./Infrastructure/steps/deploy-template.yml@devopsTemplates
        parameters:
          serviceConnection: ${{ parameters.serviceConnection }}
          subscriptionId: $(subscriptionId)
          resourceGroupName: $(ResourceGroupName)
          location: "West Europe"
          templateFilePath: "./azure/marketingcommunications-environment.json"
          armParameterOverrideString:
            '-environmentNameAbbreviation "${{parameters.environmentName}}"
            -resourceNamePrefix "${{parameters.BaseName}}"
            -sharedASPName "$(SharedASPName)"
            -sharedEnvResourceGroup "$(SharedResourceGroup)"
            -sharedKeyVaultName "$(SharedKeyVaultName)"
            -configurationStorageConnectionString "$(ConfigurationStorageConnectionString)"
            -configStorageAccountName "$(ConfigStorageAccountName)"
            -uiCustomHostName "$(UICustomHostName)"
            -certificateName "$(CertificateName)"
            -courseDirectoryImportTrigger "$(CourseDirectoryImportTrigger)"
            -ipSecurityRestrictions $(ipSecurityRestrictions)'
          tags: $(Tags)          
          processOutputs: true

      - task: AzurePowerShell@5
        displayName: 'Set Certificate Policy'
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          ScriptType: InlineScript
          Inline: | 
            Set-AzKeyVaultCertificatePolicy -VaultName $(SharedKeyVaultName) -Name $(CertificateName) -RenewAtNumberOfDaysBeforeExpiry 30
          azurePowerShellVersion: LatestVersion


